# Snippets common to C++ header/implementation files

global !p
from ultisnips_util import *
endglobal

snippet "h (.)" br
`!p snip.rv = centerBorder(match.group(1), t[1])`
`!p snip.rv = centerPadding(t[1]) + "// "`$1
`!p snip.rv = centerBorder(match.group(1), t[1])`
endsnippet

snippet class
`!p snip.rv = centerBorder("=", "class " + t[1])`
`!p snip.rv = centerPadding("class " + t[1]) + "// class "`$1
`!p snip.rv = centerBorder("=", "class " + t[1])`

`!p snip.rv = classDef(t[1])`
endsnippet

snippet struct
`!p snip.rv = centerBorder("=", "struct " + t[1])`
`!p snip.rv = centerPadding("struct " + t[1]) + "// struct "`$1
`!p snip.rv = centerBorder("=", "struct " + t[1])`

`!p snip.rv = structDef(t[1])`
endsnippet

snippet util
`!p snip.rv = centerBorder("=", "struct " + t[1])`
`!p snip.rv = centerPadding("struct " + t[1]) + "// struct "`$1
`!p snip.rv = centerBorder("=", "struct " + t[1])`

`!p snip.rv = utilDef(t[1])`
endsnippet

snippet protocol
`!p snip.rv = centerBorder("=", "class " + t[1])`
`!p snip.rv = centerPadding("class " + t[1]) + "// class "`$1
`!p snip.rv = centerBorder("=", "class " + t[1])`

`!p snip.rv = protocolDef(t[1])`
endsnippet

snippet pod
`!p snip.rv = header("=", "class " + t[1])`

struct $1 {
	// TODO

	// DATA
};

endsnippet

snippet inline
// ============================================================================
//                      INLINE AND TEMPLATE FUNCTION IMPLEMENTATIONS
// ============================================================================

$0
endsnippet

# Snippets common to C++ header/implementation files

global !p
from ultisnips_util import *
endglobal

snippet inc
#include <$1.h>
endsnippet

snippet class
`!p snip.rv = centerBorder("=", "class " + t[1])`
`!p snip.rv = centerPadding("class " + t[1]) + "// class "`$1
`!p snip.rv = centerBorder("=", "class " + t[1])`

`!p snip.rv = classDef(t[1])`
endsnippet

snippet struct
`!p snip.rv = centerBorder("=", "struct " + t[1])`
`!p snip.rv = centerPadding("struct " + t[1]) + "// struct "`$1
`!p snip.rv = centerBorder("=", "struct " + t[1])`

`!p snip.rv = structDef(t[1])`
endsnippet

snippet util
`!p snip.rv = centerBorder("=", "struct " + t[1])`
`!p snip.rv = centerPadding("struct " + t[1]) + "// struct "`$1
`!p snip.rv = centerBorder("=", "struct " + t[1])`

`!p snip.rv = utilDef(t[1])`
endsnippet

snippet protocol
`!p snip.rv = centerBorder("=", "class " + t[1])`
`!p snip.rv = centerPadding("class " + t[1]) + "// class "`$1
`!p snip.rv = centerBorder("=", "class " + t[1])`

`!p snip.rv = protocolDef(t[1])`
endsnippet

snippet enum
`!p snip.rv = centerBorder("=", "struct " + t[1])`
`!p snip.rv = centerPadding("struct " + t[1]) + "// struct "`$1
`!p snip.rv = centerBorder("=", "struct " + t[1])`

`!p snip.rv = enumDef(t[1])`
endsnippet

snippet pod
`!p snip.rv = header("=", "class " + t[1])`

struct $1 {
	// TODO

	// DATA
};

endsnippet

snippet test_case "test case" m
case $1: {
  // --------------------------------------------------------------------
  // $2
  //
  // Concerns:
  //  a) $0
  //
  // Plan:
  //  1)
  //
  // Testing:
  // --------------------------------------------------------------------

  if (verbose) cout << endl
                    << "$2" << endl
`!p snip.rv = "                    << \"" + "="*len(t[2]) + "\" << endl;"`

} break;
endsnippet


snippet inline
// ============================================================================
//                      INLINE AND TEMPLATE FUNCTION IMPLEMENTATIONS
// ============================================================================

$0
endsnippet
